PREDICT THE BURNED AREA OF FOREST FIRES WITH NEURAL NETWORKS

ANS-

import numpy
import pandas

from sklearn.feature_selection import RFE
from sklearn.ensemble import ExtraTreesRegressor


import matplotlib.pyplot as plt
from pandas.tools.plotting import scatter_matrix


from sklearn.preprocessing import MinMaxScaler
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Ridge
from sklearn.linear_model import Lasso
from sklearn.linear_model import ElasticNet
from sklearn.ensemble import BaggingRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import ExtraTreesRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.neighbors import KNeighborsRegressor
from sklearn.svm import SVR
from sklearn.metrics import explained_variance_score
from sklearn.metrics import mean_absolute_error



from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Dropout
from keras.utils import np_utils
from keras.constraints import maxnorm
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error
from keras.wrappers.scikit_learn import KerasRegressor
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import KFold
from sklearn.preprocessing import StandardScaler

# fix random seed for reproducibility
seed = 7
numpy.random.seed(seed)
Using TensorFlow backend.
/opt/conda/lib/python3.6/importlib/_bootstrap.py:219: RuntimeWarning: compiletime version 3.5 of module 'tensorflow.python.framework.fast_tensor_util' does not match runtime version 3.6
  return f(*args, **kwds)
# load dataset
dataframe = pandas.read_csv(r"../input/forestfires.csv")



# Encode Data
dataframe.month.replace(('jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec'),(1,2,3,4,5,6,7,8,9,10,11,12), inplace=True)
dataframe.day.replace(('mon','tue','wed','thu','fri','sat','sun'),(1,2,3,4,5,6,7), inplace=True)
print("Head:", dataframe.head())
Head:    X  Y  month  day  FFMC   DMC     DC  ISI  temp  RH  wind  rain  area
0  7  5      3    5  86.2  26.2   94.3  5.1   8.2  51   6.7   0.0   0.0
1  7  4     10    2  90.6  35.4  669.1  6.7  18.0  33   0.9   0.0   0.0
2  7  4     10    6  90.6  43.7  686.9  6.7  14.6  33   1.3   0.0   0.0
3  8  6      3    5  91.7  33.3   77.5  9.0   8.3  97   4.0   0.2   0.0
4  8  6      3    7  89.3  51.3  102.2  9.6  11.4  99   1.8   0.0   0.0
print("Statistical Description:", dataframe.describe())
Statistical Description:                 X           Y       month         day        FFMC         DMC  \
count  517.000000  517.000000  517.000000  517.000000  517.000000  517.000000   
mean     4.669246    4.299807    7.475822    4.259188   90.644681  110.872340   
std      2.313778    1.229900    2.275990    2.072929    5.520111   64.046482   
min      1.000000    2.000000    1.000000    1.000000   18.700000    1.100000   
25%      3.000000    4.000000    7.000000    2.000000   90.200000   68.600000   
50%      4.000000    4.000000    8.000000    5.000000   91.600000  108.300000   
75%      7.000000    5.000000    9.000000    6.000000   92.900000  142.400000   
max      9.000000    9.000000   12.000000    7.000000   96.200000  291.300000   

               DC         ISI        temp          RH        wind        rain  \
count  517.000000  517.000000  517.000000  517.000000  517.000000  517.000000   
mean   547.940039    9.021663   18.889168   44.288201    4.017602    0.021663   
std    248.066192    4.559477    5.806625   16.317469    1.791653    0.295959   
min      7.900000    0.000000    2.200000   15.000000    0.400000    0.000000   
25%    437.700000    6.500000   15.500000   33.000000    2.700000    0.000000   
50%    664.200000    8.400000   19.300000   42.000000    4.000000    0.000000   
75%    713.900000   10.800000   22.800000   53.000000    4.900000    0.000000   
max    860.600000   56.100000   33.300000  100.000000    9.400000    6.400000   

              area  
count   517.000000  
mean     12.847292  
std      63.655818  
min       0.000000  
25%       0.000000  
50%       0.520000  
75%       6.570000  
max    1090.840000  
print("Shape:", dataframe.shape)
Shape: (517, 13)
print("Data Types:", dataframe.dtypes)
Data Types: X          int64
Y          int64
month      int64
day        int64
FFMC     float64
DMC      float64
DC       float64
ISI      float64
temp     float64
RH         int64
wind     float64
rain     float64
area     float64
dtype: object
print("Correlation:", dataframe.corr(method='pearson'))
Correlation:               X         Y     month       day      FFMC       DMC        DC  \
X      1.000000  0.539548 -0.065003 -0.024922 -0.021039 -0.048384 -0.085916   
Y      0.539548  1.000000 -0.066292 -0.005453 -0.046308  0.007782 -0.101178   
month -0.065003 -0.066292  1.000000 -0.050837  0.291477  0.466645  0.868698   
day   -0.024922 -0.005453 -0.050837  1.000000 -0.041068  0.062870  0.000105   
FFMC  -0.021039 -0.046308  0.291477 -0.041068  1.000000  0.382619  0.330512   
DMC   -0.048384  0.007782  0.466645  0.062870  0.382619  1.000000  0.682192   
DC    -0.085916 -0.101178  0.868698  0.000105  0.330512  0.682192  1.000000   
ISI    0.006210 -0.024488  0.186597  0.032909  0.531805  0.305128  0.229154   
temp  -0.051258 -0.024103  0.368842  0.052190  0.431532  0.469594  0.496208   
RH     0.085223  0.062221 -0.095280  0.092151 -0.300995  0.073795 -0.039192   
wind   0.018798 -0.020341 -0.086368  0.032478 -0.028485 -0.105342 -0.203466   
rain   0.065387  0.033234  0.013438 -0.048340  0.056702  0.074790  0.035861   
area   0.063385  0.044873  0.056496  0.023226  0.040122  0.072994  0.049383   

            ISI      temp        RH      wind      rain      area  
X      0.006210 -0.051258  0.085223  0.018798  0.065387  0.063385  
Y     -0.024488 -0.024103  0.062221 -0.020341  0.033234  0.044873  
month  0.186597  0.368842 -0.095280 -0.086368  0.013438  0.056496  
day    0.032909  0.052190  0.092151  0.032478 -0.048340  0.023226  
FFMC   0.531805  0.431532 -0.300995 -0.028485  0.056702  0.040122  
DMC    0.305128  0.469594  0.073795 -0.105342  0.074790  0.072994  
DC     0.229154  0.496208 -0.039192 -0.203466  0.035861  0.049383  
ISI    1.000000  0.394287 -0.132517  0.106826  0.067668  0.008258  
temp   0.394287  1.000000 -0.527390 -0.227116  0.069491  0.097844  
RH    -0.132517 -0.527390  1.000000  0.069410  0.099751 -0.075519  
wind   0.106826 -0.227116  0.069410  1.000000  0.061119  0.012317  
rain   0.067668  0.069491  0.099751  0.061119  1.000000 -0.007366  
area   0.008258  0.097844 -0.075519  0.012317 -0.007366  1.000000  
'temp' has the highest correlation with the area of forest fire(which is a positive correlation), followed by 'RH' also a positive correlation, 'Rain' has the least correlation

dataset = dataframe.values


X = dataset[:,0:12]
Y = dataset[:,12]
#Feature Selection
model = ExtraTreesRegressor()
rfe = RFE(model, 3)
fit = rfe.fit(X, Y)

print("Number of Features: ", fit.n_features_)
print("Selected Features: ", fit.support_)
print("Feature Ranking: ", fit.ranking_) 
Number of Features:  3
Selected Features:  [False False False False False  True False False False  True  True False]
Feature Ranking:  [ 8  6  9  7  4  1  2  5  3  1  1 10]
'Wind', 'RH' and 'DMC' were top 3 selected features/feature combination for predicting 'Area' using Recursive Feature Elimination, the 2nd selected feature was atually one of the attributes with the highest correlation with the 'Area'

plt.hist((dataframe.area))
(array([ 508.,    6.,    1.,    0.,    0.,    0.,    1.,    0.,    0.,    1.]),
 array([    0.   ,   109.084,   218.168,   327.252,   436.336,   545.42 ,
          654.504,   763.588,   872.672,   981.756,  1090.84 ]),
 <a list of 10 Patch objects>)

Most of the dataset's samples fall between 0 and 200 of 'Area' output class, with majority being less than 100

dataframe.hist()
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd527a4cc0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5273fba8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd52772b38>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5260c710>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5282ab00>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5282ab38>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd522da710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd52293710>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5224c710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5229d5f8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5223a240>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd521f31d0>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd521af1d0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd52165710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd5210ecc0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd520cacc0>]], dtype=object)

'Temp' has a near Guassian Distribution. There are a mixture of positive skews and negative skews among the other attributes

dataframe.plot(kind='density', subplots=True, layout=(4,4), sharex=False, sharey=False)
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd52064a58>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd51e88a90>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd51eb6a90>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ada5fd0>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ad60fd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ad6c048>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4accf4e0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ac89550>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ac42550>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4acda6d8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ac31080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4abec550>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4aba7550>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ab5e550>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4ab06b00>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4aac2fd0>]], dtype=object)

dataframe.plot(kind='box', subplots=True, layout=(4,4), sharex=False, sharey=False)
X            AxesSubplot(0.125,0.71587;0.168478x0.16413)
Y         AxesSubplot(0.327174,0.71587;0.168478x0.16413)
month     AxesSubplot(0.529348,0.71587;0.168478x0.16413)
day       AxesSubplot(0.731522,0.71587;0.168478x0.16413)
FFMC        AxesSubplot(0.125,0.518913;0.168478x0.16413)
DMC      AxesSubplot(0.327174,0.518913;0.168478x0.16413)
DC       AxesSubplot(0.529348,0.518913;0.168478x0.16413)
ISI      AxesSubplot(0.731522,0.518913;0.168478x0.16413)
temp        AxesSubplot(0.125,0.321957;0.168478x0.16413)
RH       AxesSubplot(0.327174,0.321957;0.168478x0.16413)
wind     AxesSubplot(0.529348,0.321957;0.168478x0.16413)
rain     AxesSubplot(0.731522,0.321957;0.168478x0.16413)
area           AxesSubplot(0.125,0.125;0.168478x0.16413)
dtype: object

scatter_matrix(dataframe)
/opt/conda/lib/python3.6/site-packages/ipykernel_launcher.py:1: FutureWarning: 'pandas.tools.plotting.scatter_matrix' is deprecated, import 'pandas.plotting.scatter_matrix' instead.
  """Entry point for launching an IPython kernel.
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a56fac8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a4abe10>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a45ddd8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a419278>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a3d4dd8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a3d4e10>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a3bf828>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a37ac88>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a33e2b0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a34c3c8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a2a0908>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a25b860>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a214898>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a1d0898>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a185358>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a1bc3c8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a1773c8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a12f3c8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a133048>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a09e0b8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a0570b8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a0120b8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4a06d8d0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49ff4c18>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49faec18>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49f67b38>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49f099b0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49ed5588>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49e915f8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49e485f8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49e035f8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49e9f550>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49df10b8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49dab0b8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49d640b8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49d1c588>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49cc8c18>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49c83c18>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49cbcc18>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49c7e198>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49c2a588>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49be2518>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49b9c518>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49b56a58>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49b60f98>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49b28d30>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49adfd30>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49a96c50>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49a5a1d0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49a065c0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd499c04e0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd499f94e0>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd499b0a20>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd499bc9e8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49921080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd498da080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd498925c0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4984a550>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49875a20>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4982d9b0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd497e9a20>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd497a5940>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd497d7828>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49712630>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd496cb630>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49686550>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd496bfa90>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49673080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4962e080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd495e8080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4959f4e0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd495bd710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49506940>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4953e9b0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd494f79b0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd494b08d0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd494644e0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4941f550>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd493d8470>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49393390>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd493b9be0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49376be0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4932cc50>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd492e90f0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd492a5be0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49259780>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd492107f0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd491cb710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49185710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd491b9400>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49172470>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4912d390>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd490e6390>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49137c88>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49048fd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49004fd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd49038fd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48f81470>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48faba90>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48f62a90>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48f1d9b0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48ed6ef0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48e8e400>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48e46390>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48e7f390>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48e388d0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48dc3c18>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48d992b0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48d54710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48d0e710>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48cc66a0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48cfd080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48cb30f0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48c64fd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48c1afd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48c035c0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48b87c50>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48b43c50>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48b7dbe0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48ac2160>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48aed6a0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48aa66a0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48a5f6a0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48a18b70>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48a3ffd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd489fdf60>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd489b4f60>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd489794e0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48904c88>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd488dca90>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48898a90>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4884ffd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48809fd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd487c0470>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd487f9400>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd487b3470>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4876d390>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd487847b8>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd486cdef0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48694390>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4864d390>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48607320>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd486309b0>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd485eb940>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd485a6940>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4855cda0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4857eb38>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd484cc400>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48486470>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48440470>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4847a400>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4841ff60>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd483dafd0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48397ef0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4834def0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48306be0>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4833fc50>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd482f7b70>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd482b0b00>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48249e10>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4821f6a0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd481d9940>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd481f7c18>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd4814d860>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48101080>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd48139160>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd480f3160>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd480ad160>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7fdd480fdf60>]], dtype=object)

fig = plt.figure()
ax = fig.add_subplot(111)
cax = ax.matshow(dataframe.corr(), vmin=-1, vmax=1)
fig.colorbar(cax)
ticks = numpy.arange(0,13,1)
ax.set_xticks(ticks)
ax.set_yticks(ticks)
ax.set_xticklabels(dataframe.columns)
ax.set_yticklabels(dataframe.columns)
[Text(0,0,'X'),
 Text(0,0,'Y'),
 Text(0,0,'month'),
 Text(0,0,'day'),
 Text(0,0,'FFMC'),
 Text(0,0,'DMC'),
 Text(0,0,'DC'),
 Text(0,0,'ISI'),
 Text(0,0,'temp'),
 Text(0,0,'RH'),
 Text(0,0,'wind'),
 Text(0,0,'rain'),
 Text(0,0,'area')]

'cement' has the highest positive corelation as expected

num_instances = len(X)

models = []
models.append(('LiR', LinearRegression()))
models.append(('Ridge', Ridge()))
models.append(('Lasso', Lasso()))
models.append(('ElasticNet', ElasticNet()))
models.append(('Bag_Re', BaggingRegressor()))
models.append(('RandomForest', RandomForestRegressor()))
models.append(('ExtraTreesRegressor', ExtraTreesRegressor()))
models.append(('KNN', KNeighborsRegressor()))
models.append(('CART', DecisionTreeRegressor()))
models.append(('SVM', SVR()))

# Evaluations
results = []
names = []
scoring = []

for name, model in models:
    # Fit the model
    model.fit(X, Y)
    
    predictions = model.predict(X)
    
    # Evaluate the model
    score = explained_variance_score(Y, predictions)
    mae = mean_absolute_error(predictions, Y)
    # print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))
    results.append(mae)
    names.append(name)
    
    msg = "%s: %f (%f)" % (name, score, mae)
    print(msg)
LiR: 0.023975 (19.309939)
Ridge: 0.023975 (19.307816)
Lasso: 0.023297 (19.054901)
ElasticNet: 0.023187 (19.055855)
Bag_Re: 0.847118 (8.047959)
RandomForest: 0.786759 (9.067032)
ExtraTreesRegressor: 0.999897 (0.096441)
KNN: 0.273047 (15.507250)
CART: 0.999897 (0.096441)
SVM: 0.005783 (11.987317)
'ExtraTreesRegressor' and 'DecisionTreeRegressor' are the best estimators/models for this dataset, followed by 'BaggingRegressor', ey can be further explored and their hyperparameters tuned

Y = numpy.array(Y).reshape((len(Y), 1))
#Y.reshape(-1, 1)

# normalize the dataset
scaler = MinMaxScaler(feature_range=(0, 1))
Y = scaler.fit_transform(Y)
# define base model
def baseline_model():
    # create model
    model = Sequential()
    model.add(Dense(10, input_dim=12, kernel_initializer='uniform', activation='relu'))
    #model.add(Dropout(0.2))
    #model.add(Dense(5, kernel_initializer='uniform', activation='relu', kernel_constraint=maxnorm(3)))
    #model.add(Dropout(0.2))
    model.add(Dense(3, kernel_initializer='uniform', activation='relu'))
    model.add(Dense(1, kernel_initializer='uniform', activation='relu'))
    
    # compile model
    model.compile(loss='mean_squared_error', optimizer='adam')
    return model


# fix random seed for reproducibility
seed = 7
numpy.random.seed(seed)

# evaluate model with standardized dataset
estimator = KerasRegressor(build_fn=baseline_model, nb_epoch=600, batch_size=5, verbose=0)

kfold = KFold(n_splits=30, random_state=seed)
results = cross_val_score(estimator, X, Y, cv=kfold)
print("Results: %.2f (%.2f) MSE" % (results.mean(), results.std()))
Results: -0.00 (0.01) MSE
 